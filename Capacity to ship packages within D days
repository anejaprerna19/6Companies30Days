class Solution {
    public int shipWithinDays(int[] weights, int days) {
        int max=0;
        int sum=0;
        for(int val:weights)
        {
            sum+=val;
            max=Math.max(max,val);
        }
        if(days==weights.length)
            return max;
        if(days==1)
            return sum;
        int low=max;
        int high=sum;
        while(low<=high)
        {
           int mid=(low+high)/2;
            if(isPossible(weights,days,mid))
                high=mid-1;
            else
                low=mid+1;
        }
        return low;
    }
    public boolean isPossible(int arr[], int days, int target)
    {
        int count=1;
        int sum=0;
        for(int i=0;i<arr.length;i++)
        {
           sum+=arr[i];
            if(sum>target)
            {
                count++;
                sum=arr[i];
            }
            if(count>days)
                return false;
        }
        return true;
    }
}
