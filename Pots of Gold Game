    public static int findMaxCoins(int[] coin, int i, int j)
    {
        if (i == j) {
            return coin[i];
        }
        if (i + 1 == j) {
            return Integer.max(coin[i], coin[j]);
        }
        int start = coin[i] + Integer.min(findMaxCoins(coin, i + 2, j),
                                        findMaxCoins(coin, i + 1, j - 1));
 
        // if a player chooses rear pot `j`, the opponent is left to choose
        // from [i, j-1].
        // 1. If the opponent chooses front pot `i`, recur for [i+1, j-1]
        // 2. If the opponent chooses rear pot `j-1`, recur for [i, j-2]
 
        int end = coin[j] + Integer.min(findMaxCoins(coin, i + 1, j - 1),
                                        findMaxCoins(coin, i, j - 2));
 
        return Integer.max(start, end);
    }
